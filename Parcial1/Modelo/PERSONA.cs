//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Parcial1.Modelo
{
    using System;
    using System.Collections.Generic;
    
    public partial class PERSONA
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public PERSONA()
        {
            this.MASCOTA = new HashSet<MASCOTA>();
        }
    
        public int DNI { get; set; }
        public string NOMBRE { get; set; }
        public string APELLIDOS { get; set; }
        public string GENERO { get; set; }
        public string CIUDAD { get; set; }
        public string DIRECCION { get; set; }
        public byte[] FOTOPERFIL { get; set; }
        public Nullable<System.DateTime> FECHANACIMIENTO { get; set; }
        public Nullable<short> ESTADO { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MASCOTA> MASCOTA { get; set; }

        public static Proyecto4 baseDeDatos = new Proyecto4();

        public List<Persona> consultar_personas()
        {

            List<Persona> personas = new List<Persona>();

            var resultado = baseDeDatos.CONSULTAR_PERSONAS();

            foreach (var persona in resultado)
            {
                personas.Add(new Persona(persona.DNI,
                    persona.NOMBRE,
                    persona.APELLIDOS,
                    persona.GENERO,
                    persona.CIUDAD,
                    persona.DIRECCION,
                    null,
                    (DateTime)persona.FECHANACIMIENTO));
            }

            return personas;
        }

        public Persona consultar_persona(string dni)
        {
            int num_doc = 0;
            try
            {
                num_doc = Convert.ToInt32(dni);
            }
            catch (Exception ex)
            {
                //Nada
            }
            Persona persona = new Persona();

            var resultado = baseDeDatos.CONSULTAR_PERSONA(num_doc);

            foreach (var item in resultado)
            {
                persona.SetDNI(item.DNI);
                persona.SetNombre(item.NOMBRE);
                persona.SetApellidos(item.APELLIDOS);
                persona.SetCiudad(item.CIUDAD);
                persona.SetDireccion(item.DIRECCION);
                persona.SetGenero(item.GENERO);
                persona.SetfechaNacimiento((DateTime)item.FECHANACIMIENTO);
            }

            return persona;
        }

        public bool insertar_persona(int dni, string nombres, string apellidos, string genero, string ciudad, string direccion, byte[] foto, DateTime fecha)
        {
            // Creamos un objeto de la clase de contexto llamada 'VeterinariaEntities'
            // Representa la conexión con la base de datos

            var resultado = baseDeDatos.CONSULTAR_PERSONA(dni);

            Boolean existe = true;

            foreach (var item in resultado)
            {
                existe = false;
            }
            // se puede hacer parametrico
            baseDeDatos.INSERTAR_PERSONA(dni, nombres, apellidos, genero, ciudad, direccion, foto, fecha);

            return existe;
        }

        public bool actualizar_persona(string dni,string nombre, string apellido, string ciudad, string genero,string direccion, DateTime fecha) {
            int num_doc = 0;
            try
            {
                num_doc = Convert.ToInt32(dni);
            }
            catch (Exception ex)
            {
                //Nada
            }

            var resultado = baseDeDatos.CONSULTAR_PERSONA(num_doc);
            Boolean existe = false;
            foreach (var item in resultado)
            {
                existe = true;
            }

            baseDeDatos.ACTUALIZAR_PERSONA(num_doc, nombre, apellido, genero, ciudad, direccion, fecha);

            return existe;
        }

        public bool eliminar_persona(string dni) {
            int num_doc = 0;
            try
            {
                num_doc = Convert.ToInt32(dni);
            }
            catch (Exception ex)
            {
                //Nada
            }
            var resultado = baseDeDatos.CONSULTAR_PERSONA(num_doc);
            Boolean existe = false;

            foreach (var item in resultado)
            {
                existe = true;
            }

            //Eliminar
            baseDeDatos.ELIMINAR_PERSONA(num_doc);

            return existe;
        }


    }

}
